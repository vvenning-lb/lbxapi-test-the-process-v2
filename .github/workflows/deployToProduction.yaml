name: Deploy Apigee Proxy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Dotenv Action
      id: import-env
      uses: falti/dotenv-action@v1.0.2

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
    
    - name: Install NPM Packages
      run: |
         npm install axios adm-zip form-data

    - name: Get Branch Name
      id: branch-name
      run: echo "BRANCH_NAME=$(basename $GITHUB_REF)" >> $GITHUB_ENV

    - name: Set Environment Variables
      run: |
        echo "APIGEE_USER=${{ secrets.APIGEE_USERNAME }}" >> $GITHUB_ENV
        echo "APIGEE_PASSWORD=${{ secrets.APIGEE_PASSWORD }}" >> $GITHUB_ENV
        if [ "${{ env.BRANCH_NAME }}" == "master" ]; then
          echo "APIGEE_ORGANIZATION=lightbox-prod" >> $GITHUB_ENV
          echo "APIGEE_ENVIRONMENT=prod" >> $GITHUB_ENV
        else
          echo "APIGEE_ORGANIZATION=lightbox-preprod" >> $GITHUB_ENV
          echo "APIGEE_ENVIRONMENT=${{ env.BRANCH_NAME }}" >> $GITHUB_ENV
        fi
        echo "PROXY_NAME=${{ steps.import-env.outputs.proxy_name }}" >> $GITHUB_ENV
        echo "PROXY_REVISION=${{ steps.import-env.outputs.proxy_revision }}" >> $GITHUB_ENV

    - name: Deploy Apigee Proxy
      run: node scripts/deploy-apigee-proxy.js
      env:
        APIGEE_USER: ${{ env.APIGEE_USER }}
        APIGEE_PASSWORD: ${{ env.APIGEE_PASSWORD }}
        APIGEE_ORGANIZATION: ${{ env.APIGEE_ORGANIZATION }}
        APIGEE_ENVIRONMENT: ${{ env.APIGEE_ENVIRONMENT }}
        PROXY_NAME: ${{ env.PROXY_NAME }}
        PROXY_REVISION: ${{ env.PROXY_REVISION }}
